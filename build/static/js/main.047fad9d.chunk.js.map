{"version":3,"sources":["hooks/http.hook.js","components/heroesList/heroesSlice.js","assets/unknown_hero.jpeg","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/filtersSlice.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","store/index.js","index.js"],"names":["useHttp","request","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","fetchHeroes","createAsyncThunk","heroesSlice","createSlice","name","initialState","heroes","heroesLoadingStatus","reducers","addHero","state","action","push","payload","deleteItem","filter","item","id","extraReducers","builder","addCase","pending","fulfilled","rejected","addDefaultCase","actions","reducer","heroesFetching","heroesFetched","heroesFetchingError","HeroesListItem","elementClassName","description","element","onDelete","className","src","img","alt","style","onClick","type","aria-label","Spinner","role","HeroesList","filteredHeroesSelector","createSelector","filters","activeFilter","filteredHeroes","useSelector","dispatch","useDispatch","useEffect","onDeleteItem","useCallback","then","catch","err","console","error","arr","elements","length","map","props","HeroesAddForm","useState","heroName","setHeroName","heroDescr","setHeroDescr","heroElem","setHeroElem","onSubmit","e","preventDefault","newHero","uuidv4","JSON","stringify","finally","htmlFor","required","placeholder","value","onChange","target","label","renderFilters","fetchFilters","filtersSlice","filtersLoadingStatus","filtersFetching","filtersFetchingError","filtersActiveChanged","filtersFetched","HeroesFilters","btnClass","classNames","App","stringMiddleware","store","next","configureStore","devTools","process","middleware","getDefaultMiddleware","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.047fad9d.chunk.js","sourcesContent":["export const useHttp = () => {\n\n    const request = async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            throw e;\n        }\n    };\n\n    return {request}\n}","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { useHttp } from \"../../hooks/http.hook\";\n\n\nconst initialState = {\n    heroes: [],\n    heroesLoadingStatus: 'idle',\n}\n\nexport const fetchHeroes = createAsyncThunk(\n    'heroes/fetchHeroes',\n    () => {\n        const {request} = useHttp();\n        return request(\"https://admin-panel-tr9g.vercel.app/heroes\")\n    }\n)\n\nconst heroesSlice = createSlice({\n    name: 'heroes',\n    initialState,\n    reducers: { \n        addHero: (state, action) => {\n            state.heroes.push(action.payload);\n        },\n        deleteItem: (state, action) => {\n            state.heroes = state.heroes.filter(item => item.id !== action.payload);\n        },\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchHeroes.pending, state => {\n                state.heroesLoadingStatus = 'loading';\n            })\n            .addCase(fetchHeroes.fulfilled, (state, action) => {\n                state.heroesLoadingStatus = 'idle';\n                state.heroes = action.payload;\n            })\n            .addCase(fetchHeroes.rejected, state => {\n                state.heroesLoadingStatus = 'error';\n            })\n            .addDefaultCase(() => {})\n    }\n});\n\nconst {actions, reducer} = heroesSlice;\n\nexport default reducer; \n\nexport const {\n    heroesFetching,\n    heroesFetched,\n    heroesFetchingError,\n    addHero,\n    deleteItem,\n} = actions;","export default __webpack_public_path__ + \"static/media/unknown_hero.27561cca.jpeg\";","\nimport img from '../../assets/unknown_hero.jpeg';\n\nconst HeroesListItem = ({name, description, element, onDelete}) => {\n\n    let elementClassName;\n\n    switch (element) {\n        case 'fire':\n            elementClassName = 'bg-danger bg-gradient';\n            break;\n        case 'water':\n            elementClassName = 'bg-primary bg-gradient';\n            break;\n        case 'wind':\n            elementClassName = 'bg-success bg-gradient';\n            break;\n        case 'earth':\n            elementClassName = 'bg-secondary bg-gradient';\n            break;\n        default:\n            elementClassName = 'bg-warning bg-gradient';\n    }\n\n    return (\n        <li \n            className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}>\n            <img src={img} \n                 className=\"img-fluid w-25 d-inline\" \n                 alt=\"unknown hero\" \n                 style={{'objectFit': 'cover'}}/>\n            <div className=\"card-body\">\n                \n                <h3 className=\"card-title\">{name}</h3>\n                <p className=\"card-text\">{description}</p>\n            </div>\n            <span className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\n                <button onClick={onDelete} type=\"button\" className=\"btn-close btn-close\" aria-label=\"Close\"></button>\n            </span>\n        </li>\n    )\n}\n\nexport default HeroesListItem;","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import {useHttp} from '../../hooks/http.hook';\nimport { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { deleteItem, fetchHeroes } from './heroesSlice';\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from '../spinner/Spinner';\nimport { createSelector } from 'reselect';\n\nconst HeroesList = () => {\n\n    const filteredHeroesSelector = createSelector(\n        (state) => state.filters.activeFilter,\n        (state) => state.heroes.heroes,\n        (filter, heroes) => {\n            if (filter === 'all') {\n                return heroes;\n            } else {\n                return heroes.filter(item => item.element === filter)\n            }\n        }\n    );\n\n    const filteredHeroes = useSelector(filteredHeroesSelector);\n    const {heroesLoadingStatus} = useSelector(state => state.heroes);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    useEffect(() => {\n        dispatch(fetchHeroes());\n        // eslint-disable-next-line\n    }, []);\n\n    const onDeleteItem = useCallback((id) => {\n        request(`https://admin-panel-tr9g.vercel.app/heroes/${id}`, 'DELETE')\n            .then(dispatch(deleteItem(id)))\n            .catch(err => console.error(err)) // eslint-disable-next-line\n    }, [])\n\n    if (heroesLoadingStatus === \"loading\") {\n        return <Spinner/>;\n    } else if (heroesLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const renderHeroesList = (arr) => {\n        if (arr.length === 0) {\n            return <h5 className=\"text-center mt-5\">Героев пока нет</h5>\n        }\n\n        return arr.map(({id, ...props}) => {\n            return <HeroesListItem key={id} onDelete={() => onDeleteItem(id)} {...props}/>\n        })\n    }\n\n    const elements = renderHeroesList(filteredHeroes);\n    return (\n        <ul>\n            {elements}\n        </ul>\n    )\n}\n\nexport default HeroesList;","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addHero } from \"../heroesList/heroesSlice\";\nimport { v4 as uuidv4 } from 'uuid';\nimport {useHttp} from '../../hooks/http.hook';\n\nconst HeroesAddForm = () => {\n    \n    const [heroName, setHeroName] = useState('');\n    const [heroDescr, setHeroDescr] = useState('');\n    const [heroElem, setHeroElem] = useState('');\n\n    const dispatch = useDispatch();\n    const {filters} = useSelector(state => state.filters);\n    const {request} = useHttp();\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        const newHero = {\n            id: uuidv4(),\n            name: heroName,\n            description: heroDescr,\n            element: heroElem,\n        }\n        request('https://admin-panel-tr9g.vercel.app/heroes', 'POST', JSON.stringify(newHero))\n            .then(dispatch(addHero(newHero)))\n            .catch(err => console.error(err))\n            .finally(() => {\n                setHeroName('');\n                setHeroDescr('');\n                setHeroElem('');\n            })\n    }\n\n    const renderFilters = (filters) => {\n        if (filters && filters.length > 0) {\n            return filters.map(({name, label}) => {\n                if (name === 'all') return;\n                return <option key={name} value={name}>{label}</option>\n            })\n        }\n    }\n\n    return (\n        <form className=\"border p-4 shadow-lg rounded\"\n              onSubmit={onSubmit}>\n            <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label fs-4\">Имя нового героя</label>\n                <input \n                    required\n                    type=\"text\" \n                    name=\"name\" \n                    className=\"form-control\" \n                    id=\"name\" \n                    placeholder=\"Как меня зовут?\"\n                    value={heroName}\n                    onChange={(e) => setHeroName(e.target.value)}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"text\" className=\"form-label fs-4\">Описание</label>\n                <textarea\n                    required\n                    name=\"description\" \n                    className=\"form-control\" \n                    id=\"text\" \n                    placeholder=\"Что я умею?\"\n                    style={{\"height\": '130px'}}\n                    value={heroDescr}\n                    onChange={(e) => setHeroDescr(e.target.value)}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"element\" className=\"form-label\">Выбрать элемент героя</label>\n                <select \n                    required\n                    value={heroElem}\n                    className=\"form-select\" \n                    id=\"element\" \n                    name=\"element\"\n                    onChange={(e) => setHeroElem(e.target.value)}>\n                    <option >Я владею элементом...</option>\n                    {renderFilters(filters)}\n                </select>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Создать</button>\n        </form>\n    )\n}\n\nexport default HeroesAddForm;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { useHttp } from \"../../hooks/http.hook\";\n\nconst initialState = {\n    filters: [],\n    filtersLoadingStatus: 'idle',\n    activeFilter: 'all',\n}\n\nexport const fetchFilters = createAsyncThunk(\n    'filters/fetchFilters',\n    () => {\n        const {request} = useHttp();\n        return request('https://admin-panel-tr9g.vercel.app/filters')\n    }\n)\n\nconst filtersSlice = createSlice({\n    name: 'filters',\n    initialState,\n    reducers: {\n        filtersFetching: state => {\n            state.filtersLoadingStatus = 'loading';\n        },\n        filtersFetchingError: state => {\n            state.filtersLoadingStatus = 'error';\n        },\n        filtersActiveChanged: (state, action) => {\n            state.activeFilter = action.payload;\n        },\n        filtersFetched: (state, action) => {\n            state.filtersLoadingStatus = 'idle';\n            state.filters = action.payload;\n        },\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchFilters.pending, state => {\n                state.filtersLoadingStatus = 'loading';\n            })\n            .addCase(fetchFilters.fulfilled, (state, action) => {\n                state.filtersLoadingStatus = 'idle';\n                state.filters = action.payload;\n            })\n            .addCase(fetchFilters.rejected, state => {\n                state.filtersLoadingStatus = 'error';\n            })\n    }\n});\n\nconst {actions, reducer} = filtersSlice;\n\nexport default reducer;\nexport const {\n    filtersFetched,\n    filtersFetchingError,\n    filtersFetching,\n    filtersActiveChanged,\n} = actions;","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { filtersActiveChanged } from \"./filtersSlice\";\nimport { fetchFilters } from './filtersSlice';\nimport classNames from \"classnames\";\n\nconst HeroesFilters = () => {\n\n    const {filters, filtersLoadingStatus, activeFilter} = useSelector(state => state.filters);\n    const dispatch = useDispatch()\n    \n    useEffect(() => {\n        dispatch(fetchFilters());\n         // eslint-disable-next-line\n    }, []);\n\n    if (filtersLoadingStatus === 'error') {\n        return <div>Ошибка загрузки фильтра</div>\n    } else if (filtersLoadingStatus === 'loading') {\n        return <div>Идет загрузка</div>\n    }\n\n    const renderFilters = (arr) => {\n        if (arr.length === 0) {\n            return <h5 className=\"text-center mt-5\">Фильтры не найдены</h5>\n        }\n\n        return arr.map(({name, className, label}) => {\n            const btnClass = classNames('btn', className, {\n                'active': name === activeFilter\n            });\n\n            return <button\n                    className={btnClass}\n                    key={name}\n                    id={name}\n                    onClick={() => dispatch(filtersActiveChanged(name))}>\n                        {label}\n                    </button>\n        })\n    }\n\n    const elements = renderFilters(filters);\n\n    return (\n        <div className=\"card shadow-lg mt-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n                <div className=\"btn-group\">\n                    {elements}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroesFilters;","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","import { configureStore } from '@reduxjs/toolkit';\nimport filters from '../components/heroesFilters/filtersSlice';\nimport heroes from '../components/heroesList/heroesSlice';\n\n// //Example of middleware\nconst stringMiddleware = (store) => (next) => (action) => {\n    if (typeof action === 'string') {\n        return next({\n            type: action,\n        })\n    }\n    return next(action);\n}\n\nconst store = configureStore({\n    reducer: {heroes, filters},\n    devTools: process.env.NODE_ENV !== 'production',\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware),\n})\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}